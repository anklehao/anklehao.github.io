<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vuecli3-admin</title>
      <link href="/2020/05/22/vue-admin/"/>
      <url>/2020/05/22/vue-admin/</url>
      
        <content type="html"><![CDATA[<blockquote><p> 整体分析</p></blockquote><p>使用vue-cli3 快速创建项目 并自定义文件结构，后台页面布局为经典头部、左侧边栏、右侧主体内容，通过配置路由结构动态渲染左侧菜单（可扩展根据权限动态展示相应的页面）</p><h2 id="创建项目基本目录结构"><a href="#创建项目基本目录结构" class="headerlink" title="创建项目基本目录结构"></a>创建项目基本目录结构</h2><pre><code>├── node_modules               # 依赖包安装目录├── public                     # 静态资源│   ├── favicon.ico            # favicon图标│   └── index.html             # html模板├── src                        # 源代码│   ├── assets                 # 图片、字体等静态资源│   ├── components             # 全局公用组件│   ├── router                 # 路由│   ├── store                  # 全局store管理│   ├── views                  # 所有业务组件页面│   ├── App.vue                # 入口页面│   ├── main.js                # 入口文件 加载组件 初始化等├── .borwserslistrc            # 浏览器兼容相关├── .env.xxx                   # 环境变量配置&amp;emsp;├── .eslintrc.js               # eslint 配置项├── .gitignore.js              # git忽略文件设置├── .babelrc.config.js         # babel-loader 配置├── package.json               # package.json├── postcss.config.js          # postcss 配置├── vue.config.js              # vue-cli 配置└── yarn.lock                  # yarn 包</code></pre><p><img src="/images/1.png" alt="项目预览" title="项目预览"></p><p><div align="center"><img src="/images/目录结构.png" alt="目录结构" title="目录结构"></div></p><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p>通过登录接口获得token并存储在localStorage中，设置路由全局守卫判断是否已登录，进入页面，否则跳转至登录页<br>且先不做用户角色鉴权</p><p><strong>请求拦截</strong></p><pre><code>Axios.interceptors.request.use(config =&gt; {  // 可添加 token 等  if(localStorage.token) {    config.headers.Authorization = localStorage.token;  }  return config;}, err =&gt; {  return Promise.reject(err);})</code></pre><p><strong>响应拦截</strong></p><pre><code>Axios.interceptors.response.use(res =&gt; {  return res;}, err =&gt; {  switch (err.response.status) {    case 401:      // 返回401 清除token信息并跳转到登陆页面      localStorage.removeItem(&quot;token&quot;);      router.replace(&#39;/login&#39;);      break;    case 404:      console.error(&#39;网络请求不存在&#39;);      break;    default:      console.error(err.response.data)  }}  return Promise.reject(err);});</code></pre><p><strong>路由全局守卫</strong></p><pre><code>// router/index.jsrouter.beforeEach((to, from, next) =&gt; {  const isLogin = localStorage.token ? true : false;  if (!isLogin &amp;&amp; to.path !== &#39;/login&#39;) {    // 如果未登录    next(&#39;/login&#39;)  } else {    next()  }})</code></pre><h3 id="整体布局"><a href="#整体布局" class="headerlink" title="整体布局"></a>整体布局</h3><p>在layout 下创建布局承载文件，头部与左侧边栏已组件的形式引入，右侧主体通过变化路由地址展现不同的页面</p><pre><code>&lt;template&gt;  &lt;div class=&quot;layout&quot;&gt;    &lt;m-header&gt;&lt;/m-header&gt;    &lt;m-side-bar&gt;&lt;/m-side-bar&gt;    &lt;div class=&quot;page-main&quot;&gt;      &lt;transition name=&#39;fade-page&#39;&gt;        &lt;router-view&gt;&lt;/router-view&gt;      &lt;/transition&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/template&gt;</code></pre><h3 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h3><p>根据路由固有格式动态渲染左侧边栏菜单</p><ul><li>配置根目录基础路由，包含独立于布局的页面，例如 login、404 等</li><li>创建一个可以适配左侧菜单栏的路由结构</li><li>保存到vuex 中，方便左侧边栏获取渲染，并追加到基础路由中</li></ul><pre><code>const routes = [  {    path: &quot;/&quot;,    name: &quot;Home&quot;,    component: Layout,    redirect: &#39;/dashbord&#39;,    children: [      {        path: &#39;dashbord&#39;,        name: &#39;Dashbord&#39;,        component: () =&gt; import(&#39;@/views/dashboard&#39;),        meta: {          title: &#39;首页&#39;,          hidden: false,        },      }    ]  },  {    path: &quot;/login&quot;,    name: &quot;Login&quot;,    component: () =&gt; import(&#39;@/views/Login&#39;),  },  {    path: &quot;*&quot;,    name: &quot;404&quot;,    redirect: &#39;/404&#39;,    component: () =&gt; import(&#39;@/views/404&#39;),  },];// 用于渲染左侧边栏的菜单路由const asyncRoutes = [  {    path: &#39;/section&#39;,    name: &#39;section&#39;,    redirect: &#39;/section/section1&#39;,    component: () =&gt; import(&#39;@/views/Layout/Layout.vue&#39;),    meta: {      title: &#39;sections&#39;,      hidden: false,    },    children: [      {        path: &#39;/section/section1&#39;,        name: &#39;section1&#39;,        component: () =&gt; import(&#39;@/views/section/section1&#39;),        meta: {          title: &#39;section1&#39;,          hidden: false,        }      }    ]  },  {    path: &#39;/column&#39;,    name: &#39;column&#39;,    component: () =&gt; import(&#39;@/views/column/column&#39;),    meta: {      title: &#39;column&#39;,      hidden: false,    }  },  {    path: &#39;/404&#39;,    name: &#39;404&#39;,    component: () =&gt; import(&#39;@/views/404.vue&#39;),    meta: {      title: &#39;404&#39;,      hidden: true,    }  },]// 存到vuex store.commit(&#39;setMenuList&#39;, asyncRoutes);// 追加routes[0].children = routes[0].children.concat(asyncRoutes);</code></pre><p>这里我直接使用数据追加方式，并没有做鉴权的功能</p><p>在 asyncRoutes 菜单路由这里配置404 页面，基础路由匹配路径 * 的路由重定向到主体当中的404页面 </p><h3 id="左侧边栏"><a href="#左侧边栏" class="headerlink" title="左侧边栏"></a>左侧边栏</h3><p>参考文档用 el-menu 直接循环渲染菜单结构，根据 meta 配置的字段进行菜单详细渲染</p><pre><code>&lt;section v-for=&quot;(item, index) in routerList&quot; :key=&quot;index&quot;&gt;  &lt;el-submenu :index=&quot;index + &#39;&#39;&quot; v-if=&quot;item.children &amp;&amp; item.children.length &gt; 0 &amp;&amp; !item.meta.hidden&quot;&gt;    &lt;template slot=&quot;title&quot;&gt;      &lt;i :class=&quot;item.meta.icon&quot;&gt;&lt;/i&gt;      &lt;span&gt;{{item.meta.title}}&lt;/span&gt;    &lt;/template&gt;    &lt;el-menu-item v-for=&quot;(val, idx) in item.children&quot; :key=&quot;idx&quot; :index=&quot;val.path&quot;&gt;      &lt;i :class=&quot;val.meta.icon&quot; v-if=&quot;val.meta.icon&quot;&gt;&lt;/i&gt;      &lt;span v-show=&quot;!val.meta.hidden&quot;&gt;{{val.meta.title}}&lt;/span&gt;    &lt;/el-menu-item&gt;  &lt;/el-submenu&gt;  &lt;el-menu-item v-else :index=&quot;item.path&quot; v-show=&quot;!item.meta.hidden&quot;&gt;{{item.meta.title}}&lt;/el-menu-item&gt;&lt;/section&gt;// 获取vuex 中菜单路由computed:{  routerList(){    return this.$store.state.menuList.routerList  }}</code></pre><p>配置可以实现当页面刷新保持当前菜单按钮高亮</p><pre><code>&lt;el-menu   :router=&quot;true&quot;  :default-active=&quot;$route.path&quot;&gt;</code></pre><h3 id="右侧主体"><a href="#右侧主体" class="headerlink" title="右侧主体"></a>右侧主体</h3><p>每一个侧边栏的菜单按钮都对应着一个以路由名称的文件夹，页面中与之相关的子组件建议在当前目录下（便于维护）</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>业内广受好评的框架<br><a href="https://github.com/PanJiaChen/vue-element-admin" target="_blank" rel="noopener">vue-element-admin</a> </p><p>可参考框架<br><a href="https://github.com/gcddblue/vue-admin-webapp" target="_blank" rel="noopener">vue-admin-webapp</a> </p><p>用element ui（不局限于）搭建超级简易的后台管理页面框架，纯经验水文一起交流，大佬轻喷~</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>记录一些有用的网站</title>
      <link href="/2019/07/25/ji-lu-yi-xie-you-yong-de-wang-zhan/"/>
      <url>/2019/07/25/ji-lu-yi-xie-you-yong-de-wang-zhan/</url>
      
        <content type="html"><![CDATA[<h3 id="好文收藏"><a href="#好文收藏" class="headerlink" title="好文收藏"></a>好文收藏</h3><blockquote><p>网上搜集</p></blockquote><ul><li><a href="https://zhuanlan.zhihu.com/p/35080324" target="_blank" rel="noopener">抱歉，学会 Proxy 真的可以为所欲为</a></li><li><a href="https://zhuanlan.zhihu.com/p/57958328" target="_blank" rel="noopener">TypeScript，初次见面，请多指教</a></li><li><a href="http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/" target="_blank" rel="noopener">为什么你应该（从现在开始就）写博客</a></li></ul><h3 id="在线工具"><a href="#在线工具" class="headerlink" title="在线工具"></a>在线工具</h3><ul><li><a href="https://qishaoxuan.github.io/css_tricks/" target="_blank" rel="noopener">CSS Tricks</a></li><li><a href="https://carbon.now.sh" target="_blank" rel="noopener">代码生成图片</a></li><li><a href="http://www.atoolbox.net/" target="_blank" rel="noopener">在线工具箱</a></li><li><a href="https://lhammer.cn/" target="_blank" rel="noopener">css技巧</a></li></ul><h3 id="技巧文章"><a href="#技巧文章" class="headerlink" title="技巧文章"></a>技巧文章</h3><ul><li><a href="https://www.cnblogs.com/pcyy/p/5655542.html" target="_blank" rel="noopener">浏览器js特性</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>js技巧合集</title>
      <link href="/2019/05/07/js-ji-qiao-he-ji/"/>
      <url>/2019/05/07/js-ji-qiao-he-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="JS技巧"><a href="#JS技巧" class="headerlink" title="JS技巧"></a>JS技巧</h1><blockquote><p>总结网上一些大佬收集分享的实用js方法技巧</p></blockquote><h3 id="无loop生成指定长度的数组"><a href="#无loop生成指定长度的数组" class="headerlink" title="无loop生成指定长度的数组"></a>无loop生成指定长度的数组</h3><pre><code>const list = [1, 1, 2, 3, 6, 45, 8, 5, 4, 6, 5]const uniqueList = [...new Set(list)] // [1, 2, 3, 6, 45, 8, 5, 4]</code></pre><h3 id="RGB色值生成16进制色值"><a href="#RGB色值生成16进制色值" class="headerlink" title="RGB色值生成16进制色值"></a>RGB色值生成16进制色值</h3><pre><code>const rgb2Hex = rgb =&gt; {    let rgbList = rgb.toString().match(/\d+/g)    let hex = &#39;#&#39;    for (let i = 0, len = rgbList.length; i &lt; len; ++i) {        hex += (&#39;0&#39; + Number(rgbList[i]).toString(16)).slice(-2)    }    return hex};rgb2Hex(&#39;100, 50, 0&#39;) // &#39;#643200&#39;</code></pre><h3 id="一行代码去重数组"><a href="#一行代码去重数组" class="headerlink" title="一行代码去重数组"></a>一行代码去重数组</h3><pre><code>const list = [1, 1, 2, 3, 6, 45, 8, 5, 4, 6, 5]const uniqueList = [...new Set(list)] // [1, 2, 3, 6, 45, 8, 5, 4]</code></pre><h3 id="判断是否为质数"><a href="#判断是否为质数" class="headerlink" title="判断是否为质数"></a>判断是否为质数</h3><pre><code>const mathIsPrime = n =&gt; {  if (n === 2 || n === 3) {    return true  }  if (isNaN(n) || n &lt;= 1 || n % 1 != 0 || n % 2 == 0 || n % 3 == 0) {    return false;  }  for (let x = 6; x &lt;= Math.sqrt(n) + 1; x += 6) {    if (n % (x - 1) == 0 || n % (x + 1) == 0) {      return false    }  }  return true}mathIsPrime(0) // true</code></pre><h3 id="时间格式化"><a href="#时间格式化" class="headerlink" title="时间格式化"></a>时间格式化</h3><pre><code>const dateFormatter = (formatter, date) =&gt; {    date = (date ? new Date(date) : new Date)    const Y = date.getFullYear() + &#39;&#39;,          M = date.getMonth() + 1,          D = date.getDate(),          H = date.getHours(),          m = date.getMinutes(),          s = date.getSeconds()    return formatter.replace(/YYYY|yyyy/g, Y)                    .replace(/YY|yy/g, Y.substr(2, 2))                    .replace(/MM/g, (M &lt; 10 ? &#39;0&#39; : &#39;&#39;) + M)                    .replace(/DD/g, (D &lt; 10 ? &#39;0&#39; : &#39;&#39;) + D)                    .replace(/HH|hh/g, (H &lt; 10 ? &#39;0&#39; : &#39;&#39;) + H)                    .replace(/mm/g, (m &lt; 10 ? &#39;0&#39; : &#39;&#39;) + m)                    .replace(/ss/g, (s &lt; 10 ? &#39;0&#39; : &#39;&#39;) + s)}dateFormatter(&#39;YYYY-MM-DD HH:mm&#39;, &#39;1995/02/15 13:55&#39;) // 1995-02-15 13:55</code></pre><h3 id="生成随机ID"><a href="#生成随机ID" class="headerlink" title="生成随机ID"></a>生成随机ID</h3><pre><code>const RandomId = len =&gt; Math.random().toString(36).substr(3, len);const id = RandomId(10);// id =&gt; &quot;jg7zpgiqva&quot;</code></pre><h3 id="生成星级评分"><a href="#生成星级评分" class="headerlink" title="生成星级评分"></a>生成星级评分</h3><pre><code>const StartScore = rate =&gt; &quot;★★★★★☆☆☆☆☆&quot;.slice(5 - rate, 10 - rate);const start = StartScore(3);// start =&gt; &quot;★★★&quot;</code></pre><h3 id="网站链接"><a href="#网站链接" class="headerlink" title="网站链接"></a><strong>网站链接</strong></h3><ul><li><a href="https://juejin.im/post/5cc7afdde51d456e671c7e48" target="_blank" rel="noopener">技巧网站</a></li><li><a href="https://juejin.im/post/5d3e96696fb9a07ea420c71c" target="_blank" rel="noopener">提升开发幸福感的10条JS技巧</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> tag1 </tag>
            
            <tag> tag2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/05/07/hello-world/"/>
      <url>/2019/05/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
